
# This is a Docker Compose file that defines the services and their
# configurations for the GoldenCare project.

# The services include:
#   - cube: a Cube.js service for analytics and data visualization
#   - postgres: a PostgreSQL database for storing data
#   - django: a Django web application for managing data
#   - nginx: a web server for serving static files and reverse proxying the
#     Django application
#   - redis: a Redis database for storing session data and caching
#   - ftp: an FTP server for transferring files
#   - emqx: an MQTT broker for IoT devices

# The volumes mount the following directories:
#   - ./nginx: configurations for the Nginx web server
#   - ./static: static files for the Django application
#   - ./media: media files for the Django application
#   - ./logs: logs for the Django application
#   - ./emqx_data: data for the EMQX MQTT broker
#   - ./emqx_log: logs for the EMQX MQTT broker

services:
  cube:
    image: cubejs/cube:latest
    ports:
      - "4000:4000"
      - "15432:15432"
    environment:
      - CUBEJS_DB_TYPE=postgres
      - CUBEJS_DEV_MODE=true
      - RUST_BACKTRACE=full
      - CUBEJS_API_SECRET=${CUBEJS_API_SECRET}
      - CUBEJS_DB_HOST=postgres
      - CUBEJS_DB_NAME=${POSTGRES_DB}
      - CUBEJS_DB_USER=${POSTGRES_USER}
      - CUBEJS_DB_PASS=${POSTGRES_PASSWORD}
      - CUBEJS_DB_PORT=5432
      - CUBEJS_CACHE_AND_QUEUE_DRIVER=cubestore  # Add this line

    volumes:
      - .:/cube/conf'
      - cube_store_data:/cube/data  # Add persistent volume for cube store data

    depends_on:
      - postgres
    networks:
      - backend-network

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  django:
    image: silverwatchbackend:latest
    env_file:
      - .env
    volumes:
      - .:/app/
      - static_volume:/app/static
      - media_volume:/app/media
      - logs:/app/logs  # Ensure logs are persistent
    depends_on:
      - postgres  
      - redis
      - emqx
    networks:
      - backend-network

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      - django
    networks:
      - backend-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend-network

  ftp:
    image: fauria/vsftpd
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PASS=${FTP_PASS}
      - PASV_ADDRESS=${PASV_ADDRESS}
      - PASV_MIN_PORT=21100
      - PASV_MAX_PORT=21110
      - FILE_OPEN_MODE=0666
      - LOCAL_UMASK=022
    ports:
      - "20:20"
      - "21:21"
      - "21100-21110:21100-21110"
    volumes:
      - static_volume:/home/vsftpd/static
      - media_volume:/home/vsftpd/media
    networks:
      - backend-network

  emqx:
    image: emqx:latest
    environment:
      - EMQX_LISTENERS__TCP__DEFAULT__BIND=1883
      - EMQX_ADMIN_USER=${EMQX_ADMIN_USER}
      - EMQX_ADMIN_PASSWORD=${EMQX_ADMIN_PASSWORD}
      - EMQX_LOADED_MODULES="[emqx_management, emqx_dashboard]"
    ports:
      - "18083:18083"
      - "1883:1883"
      - "8080:8080"
    volumes:
      - emqx_data:/opt/emqx/data
      - emqx_log:/opt/emqx/log
    networks:
      - backend-network

volumes:
  postgres_data:
  static_volume:
  media_volume:
  logs:
  emqx_data:
  emqx_log:
  cube_store_data: 

networks:
  backend-network:
    driver: bridge
